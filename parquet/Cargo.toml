# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

[package]
name = "parquet"
version = "5.0.0"
license = "Apache-2.0"
description = "Apache Parquet implementation in Rust"
homepage = "https://github.com/apache/arrow-rs"
repository = "https://github.com/apache/arrow-rs"
authors = ["Apache Arrow <dev@arrow.apache.org>"]
keywords = [ "arrow", "parquet", "hadoop" ]
readme = "README.md"
build = "build.rs"
edition = "2018"

[dependencies]
# update note: pin `parquet-format` to specific version until it does not break at minor
# version, see ARROW-11187.  update: since this comment, it is now pinned at ~4.0.0 and
# upstream arrow-rs parquet vendors it
parquet-format = "~4.0.0"
aes-gcm = "0.10.3"
byteorder = "1"
thrift = "0.13"
snap = { version = "1.0", optional = true }
brotli = { version = "3.3", optional = true }
flate2 = { version = "1.0", optional = true }
lz4 = { version = "1.23", optional = true }
zstd = { version = "0.12", optional = true }
chrono = "0.4"
num-bigint = "0.4"
arrow = { path = "../arrow", version = "5.0.0", optional = true }
base64 = { version = "0.13", optional = true }
clap = { version = "2.33.3", optional = true }
serde_json = { version = "1.0", features = ["preserve_order"], optional = true }
serde = { version = "1.0.115", features = ["derive"] }
rand = "0.8"
sha3 = "0.10.8"

[dev-dependencies]
criterion = "0.3"
rand = "0.8"
snap = "1.0"
brotli = "3.3"
flate2 = "1.0"
lz4 = "1.23"
arrow = { path = "../arrow", version = "5.0.0" }
serde_json = { version = "1.0", features = ["preserve_order"] }

[features]
default = ["arrow", "snap", "brotli", "flate2", "lz4", "zstd", "base64"]
cli = ["serde_json", "base64", "clap"]

[[ bin ]]
name = "parquet-read"
required-features = ["cli"]

[[ bin ]]
name = "parquet-schema"
required-features = ["cli"]

[[ bin ]]
name = "parquet-rowcount"
required-features = ["cli"]

[[bench]]
name = "arrow_writer"
harness = false

[[bench]]
name = "arrow_array_reader"
harness = false

# Just silence all of prolematic rules in original code
# This list should be updated during rebasing on new release, before our commits, but after toolchain updates
# That way we would disable only the rules that are violated by upstream code, but not by ours

[lints.rust]
deprecated = "allow"
unused_imports = "allow"
unused_mut = "allow"

[lints.clippy]
# Can drop this rule after rebase on commit 55d6073 "Require Send+Sync bounds for Allocation trait (#1945)", first released in 18.0.0
arc_with_non_send_sync = "allow"
derivable_impls = "allow"
enum_variant_names = "allow"
extra_unused_lifetimes = "allow"
get_first = "allow"
let_and_return = "allow"
needless_borrow = "allow"
needless_borrowed_reference = "allow"
needless_borrows_for_generic_args = "allow"
needless_lifetimes = "allow"
needless_return = "allow"
nonminimal_bool = "allow"
partialeq_to_none = "allow"
seek_from_current = "allow"
should_implement_trait = "allow"
unnecessary_cast = "allow"
unnecessary_to_owned = "allow"
unused_io_amount = "allow"
useless_conversion = "allow"
useless_format = "allow"
useless_vec = "allow"
wrong_self_convention = "allow"
